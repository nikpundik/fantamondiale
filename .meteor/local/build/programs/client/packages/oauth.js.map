)]}'
{"version":3,"file":"\\packages\\oauth.js","sources":["oauth/oauth_client.js","oauth/deprecated.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iE;AACA,4E;AACA,sC;AACA,2B;;AAEA,W;;AAEA,2E;AACA,U;AACA,E;AACA,kC;AACA,+E;AACA,e;AACA,uE;AACA,yD;AACA,wD;AACA,gE;AACA,gC;AACA,Q;AACA,4C;AACA,4C;AACA,I;;AAEA,+C;AACA,S;AACA,iF;AACA,sC;AACA,gE;AACA,mE;AACA,iB;AACA,mE;AACA,oE;AACA,qE;AACA,wB;AACA,a;AACA,K;;AAEA,sB;AACA,oC;AACA,iB;AACA,K;AACA,U;AACA,E;;;AAGA,sD;AACA,qD;AACA,6C;AACA,qD;AACA,4C;AACA,2D;AACA,wD;AACA,6D;AACA,iE;AACA,wB;;AAEA,oE;AACA,kE;AACA,gD;AACA,iD;AACA,0D;AACA,uE;;AAEA,sD;AACA,sB;AACA,sB;AACA,mB;AACA,E;;AAEA,0B;AACA,2E;AACA,6E;AACA,kB;AACA,Q;AACA,4C;AACA,c;AACA,I;AACA,E;;AAEA,qE;AACA,oB;AACA,oE;AACA,iC;AACA,wB;AACA,mD;AACA,gD;AACA,U;AACA,mE;AACA,G;AACA,E;;AAEA,qE;AACA,0E;AACA,8D;AACA,kD;AACA,4C;AACA,gB;AACA,E;;;;;;;;;;;;;;;;;;;ACjGA,wB;;AAEA,c","sourcesContent":["// credentialToken -> credentialSecret. You must provide both the\r\n// credentialToken and the credentialSecret to retrieve an access token from\r\n// the _pendingCredentials collection.\r\nvar credentialSecrets = {};\r\n\r\nOAuth = {};\r\n\r\n// Open a popup window, centered on the screen, and call a callback when it\r\n// closes.\r\n//\r\n// @param url {String} url to show\r\n// @param callback {Function} Callback function to call on completion. Takes no\r\n//   arguments.\r\n// @param dimensions {optional Object(width, height)} The dimensions of\r\n//   the popup. If not passed defaults to something sane.\r\nOAuth.showPopup = function (url, callback, dimensions) {\r\n  // default dimensions that worked well for facebook and google\r\n  var popup = openCenteredPopup(\r\n    url,\r\n    (dimensions && dimensions.width) || 650,\r\n    (dimensions && dimensions.height) || 331\r\n  );\r\n\r\n  var checkPopupOpen = setInterval(function() {\r\n    try {\r\n      // Fix for #328 - added a second test criteria (popup.closed === undefined)\r\n      // to humour this Android quirk:\r\n      // http://code.google.com/p/android/issues/detail?id=21061\r\n      var popupClosed = popup.closed || popup.closed === undefined;\r\n    } catch (e) {\r\n      // For some unknown reason, IE9 (and others?) sometimes (when\r\n      // the popup closes too quickly?) throws \"SCRIPT16386: No such\r\n      // interface supported\" when trying to read 'popup.closed'. Try\r\n      // again in 100ms.\r\n      return;\r\n    }\r\n\r\n    if (popupClosed) {\r\n      clearInterval(checkPopupOpen);\r\n      callback();\r\n    }\r\n  }, 100);\r\n};\r\n\r\n\r\nvar openCenteredPopup = function(url, width, height) {\r\n  var screenX = typeof window.screenX !== 'undefined'\r\n        ? window.screenX : window.screenLeft;\r\n  var screenY = typeof window.screenY !== 'undefined'\r\n        ? window.screenY : window.screenTop;\r\n  var outerWidth = typeof window.outerWidth !== 'undefined'\r\n        ? window.outerWidth : document.body.clientWidth;\r\n  var outerHeight = typeof window.outerHeight !== 'undefined'\r\n        ? window.outerHeight : (document.body.clientHeight - 22);\r\n  // XXX what is the 22?\r\n\r\n  // Use `outerWidth - width` and `outerHeight - height` for help in\r\n  // positioning the popup centered relative to the current window\r\n  var left = screenX + (outerWidth - width) / 2;\r\n  var top = screenY + (outerHeight - height) / 2;\r\n  var features = ('width=' + width + ',height=' + height +\r\n                  ',left=' + left + ',top=' + top + ',scrollbars=yes');\r\n\r\n  var newwindow = window.open(url, 'Login', features);\r\n  if (newwindow.focus)\r\n    newwindow.focus();\r\n  return newwindow;\r\n};\r\n\r\n// XXX COMPAT WITH 0.7.0.1\r\n// Private interface but probably used by many oauth clients in atmosphere.\r\nOAuth.initiateLogin = function (credentialToken, url, callback, dimensions) {\r\n  OAuth.showPopup(\r\n    url,\r\n    _.bind(callback, null, credentialToken),\r\n    dimensions\r\n  );\r\n};\r\n\r\n// Called by the popup when the OAuth flow is completed, right before\r\n// the popup closes.\r\nOAuth._handleCredentialSecret = function (credentialToken, secret) {\r\n  check(credentialToken, String);\r\n  check(secret, String);\r\n  if (! _.has(credentialSecrets,credentialToken)) {\r\n    credentialSecrets[credentialToken] = secret;\r\n  } else {\r\n    throw new Error(\"Duplicate credential token from OAuth login\");\r\n  }\r\n};\r\n\r\n// Used by accounts-oauth, which needs both a credentialToken and the\r\n// corresponding to credential secret to call the `login` method over DDP.\r\nOAuth._retrieveCredentialSecret = function (credentialToken) {\r\n  var secret = credentialSecrets[credentialToken];\r\n  delete credentialSecrets[credentialToken];\r\n  return secret;\r\n};\r\n","// XXX COMPAT WITH 0.8.0\r\n\r\nOauth = OAuth;\r\n"]}
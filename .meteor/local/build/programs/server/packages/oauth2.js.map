{"version":3,"file":"\\packages\\oauth2.js","sources":["oauth2/oauth2_server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,qB;AACA,8D;AACA,oC;AACA,qB;AACA,kD;;AAEA,oC;AACA,wD;AACA,2C;;AAEA,+D;AACA,wC;AACA,gD;AACA,uC;AACA,2C;AACA,kC;AACA,yB;AACA,G;;AAEA,yD;AACA,sB;AACA,0D;AACA,E","sourcesContent":["// connect middleware\r\nOAuth._requestHandlers['2'] = function (service, query, res) {\r\n  // check if user authorized access\r\n  if (!query.error) {\r\n    // Prepare the login results before returning.\r\n\r\n    // Run service-specific handler.\r\n    var oauthResult = service.handleOauthRequest(query);\r\n    var credentialSecret = Random.secret();\r\n\r\n    // Store the login result so it can be retrieved in another\r\n    // browser tab by the result handler\r\n    OAuth._storePendingCredential(query.state, {\r\n      serviceName: service.serviceName,\r\n      serviceData: oauthResult.serviceData,\r\n      options: oauthResult.options\r\n    }, credentialSecret);\r\n  }\r\n\r\n  // Either close the window, redirect, or render nothing\r\n  // if all else fails\r\n  OAuth._renderOauthResults(res, query, credentialSecret);\r\n};\r\n"]}